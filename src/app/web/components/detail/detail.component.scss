.c-detail {
  margin: 60px auto;
  @media only screen and (max-width: 768px) {
    margin: 0 auto;
  }
  &__subtitle {
    margin-block-end: 2rem;
  }
  &__list-title {
    margin: 0;
  }
  &__row {
    display: grid;
    align-items: flex-start;
    grid-template-columns: 400px 1fr;
    gap: 50px;
    @media only screen and (max-width: 768px) {
      display: block;
    }
  }
  &__img {
    width: 100%;
    height: 400px;
    background-size: cover;
    background-position: center;
  }
  &__description {
    padding-top: 40px;
    text-align: left;
    &-text {
      margin-left: 20px;
    }
  }
  &__text {
    text-align: left;
    @media only screen and (max-width: 768px) {
      margin-top: 20px;
    }
  }
  &__gallery-block {
   display: grid;
   grid-template-columns: 1.8fr 1.2fr;
   gap: 50px;
   @media only screen and (max-width: 992px) {
    grid-template-columns: 1fr;
   }
  }
  &__gallery {
    &-content {
      width: 100%;
      height: 500px;
      margin: 0 auto;
      @media only screen and (max-width: 768px) {
        height: 400px;
      }
    }
  }
  &__contact {
    &-item {
      display: flex;
      align-items: center;
      margin-top: 15px;
      gap: 5px;
      @media only screen and (max-width: 768px) {
        display: block;
      }
    }
  }
  .mat-list-base .mat-list-item.mat-list-item-with-avatar, .mat-list-base .mat-list-option.mat-list-item-with-avatar {
    height: 45px;
  }

  /* GALLERY */
  /*
  * https://github.com/alexerlandsson/css-fadeshow
  */

  $max-slides:					5;
  $prefix:							true;
  $responsive:					true;
  $breakpoint-small:			500px;
  $fade-time:						1;
  $prev-next-fontfamily:		sans-serif;
  $prev-next-icon-size:		3vw;
  $prev-next-icon-color:		rgba(255,255,255,0.5);
  $prev-next-bg:					rgba(255,255,255,0);
  $prev-next-bg-hover:			rgba(255,255,255,0.1);
  $prev-icon:						'❮';
  $next-icon:						'❯';
  $autohide-next-prev:			false;
  $quick-nav-color:				rgba(255,255,255,0.8);
  $quick-nav-active-color:	coral;
  $fade-color:					#fff;
  $autoplay:						false;


  /*
  * ===== MIXINS =====
  *
  * This section contains mixin used
  * Do not change anything here unless you know what you are doing.
  */

  /* Mixins to handle prefixes */

  @mixin fadeshow-transition($value...) {
    @if length($value) < 1 {
      $value: all 150ms linear;
    }
    @if $prefix == true {
      -webkit-transition: $value;
    }
            transition: $value;
  }

  @mixin fadeshow-animation($value...) {
    @if $prefix == true {
      -webkit-animation: $value;
    }
            animation: $value;
  }

  @mixin fadeshow-animation-delay($value) {
    @if $prefix == true {
      -webkit-animation-delay: $value;
    }
            animation-delay: $value;
  }

  @mixin fadeshow-unselectable() {
    @if $prefix == true {
      -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }
            user-select: none;
  }

  [data-am-fadeshow] {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    background-color: $fade-color;

    /* Slides */
    .fs-slide {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      opacity: 0;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      @include fadeshow-transition(opacity #{$fade-time}s ease);

      /* Display first child on load */
      &:first-child {
        opacity: 1;
      }
    }

    /* Prev/Next Navigation */
    %prev-next {
      position: absolute;
      display: none;
      top: 0;
      bottom: 0;
      width: 100px;
      cursor: pointer;
      font-family: $prev-next-fontfamily;
      background-color: $prev-next-bg;
      -webkit-tap-highlight-color: rgba(0,0,0,0);
      @include fadeshow-transition(all 200ms ease);

      @if $responsive == true {
        @media (max-width: $breakpoint-small) {
          width: 50%;
        }
      }

      &:before {
        position: absolute;
        top: 50%;
        font-size: $prev-next-icon-size;
        color: $prev-next-icon-color;
      }

      &:hover {
        background-color: $prev-next-bg-hover;
        @if $responsive == true {
          @media (max-width: $breakpoint-small) {
            background-color: rgba(255,255,255,0);
          }
        }
      }
    }

    .fs-prev-btn {
      @extend %prev-next;
      left: 0;

      &:before {
        content: "#{$prev-icon}";
        left: 50%;
        @if $responsive == true {
          @media (max-width: $breakpoint-small) {
            left: 30px;
          }
        }
      }
    }

    .fs-next-btn {
      @extend %prev-next;
      right: 0;

      &:before {
        content: "#{$next-icon}";
        right: 50%;
        @if $responsive == true {
          @media (max-width: $breakpoint-small) {
            right: 30px;
          }
        }
      }
    }

    /* Base functionality */
    input[type="radio"] {
      position: fixed;
      top: -9999px;

      &:checked {

        /* This loop handles the slide switching and quick navigation active state */
        $i: $max-slides;

        @while $i > 0 {

          &:nth-of-type(#{$i}) {
            /* Show slide */
            ~ .fs-slides {
              .fs-slide {
                //Cancel autoplay
                opacity: 0;
                @include fadeshow-animation(none !important);
              }
              .fs-slide:nth-child(#{$i}) {
                opacity: 1;
              }
            }
          }
          $i: $i - 1;
        }

        /* Hide navigation if only one slide */
        &:first-of-type:last-of-type {
          ~ .fs-quick-nav,
          ~ .fs-prev-nav,
          ~ .fs-next-nav {
            display: none !important;
          }
        }

      }
    }
  }

  /* Handle Prev/Next buttons */
  [data-am-fadeshow~="next-prev-navigation"] {
    input[type="radio"] {

      &:checked {

        $i: $max-slides;

        @while $i > 0 {

          &:nth-of-type(#{$i}) {

            $prev: ($i - 1);
            $next: ($i + 1);

            /* Show previous button */
            @if $prev > 0 {
              ~ .fs-prev-nav {
                .fs-prev-btn {
                  display: none;
                }
                .fs-prev-btn:nth-child(#{$prev}) {
                  display: block;
                }
              }
            }

            /* Show next button */
            @if $next < ($max-slides + 1) {
              ~ .fs-next-nav {
                .fs-next-btn {
                  display: none;
                }
                .fs-next-btn:nth-child(#{$next}) {
                  display: block;
                }
              }
            }

            /* Show last prev button if first slide */
            &:first-of-type {
              ~ .fs-prev-nav {
                .fs-prev-btn:last-child {
                  display: block;
                }
              }
            }

            /* Show first next button if last slide */
            &:last-of-type {
              ~ .fs-next-nav {
                .fs-next-btn:first-child {
                  display: block;
                }
              }
            }

          }
          $i: $i - 1;
        }
      }
    }

    /* Display first pair of Prev/Next Buttons on load */
    .fs-prev-btn:last-child {
      display: block;
    }

    .fs-next-btn:nth-child(2) {
      display: block
    }

  }


}
